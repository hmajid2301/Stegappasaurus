// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Decoding Main: Match Snapshots 1 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "backgroundColor": "#FFF",
      },
    ]
  }
>
  <MainHeader
    navigation={
      Object {
        "addListener": [MockFunction],
        "closeDrawer": [MockFunction],
        "dangerouslyGetParent": [MockFunction],
        "dismiss": [MockFunction],
        "dispatch": [MockFunction],
        "emit": [MockFunction],
        "getParam": [MockFunction],
        "goBack": [MockFunction],
        "isFirstRouteInParent": [MockFunction],
        "isFocused": [MockFunction],
        "navigate": [MockFunction],
        "openDrawer": [MockFunction],
        "setParams": [MockFunction],
        "state": Object {
          "index": 0,
          "isTransitioning": false,
          "key": "Home",
          "routeName": "Home",
          "routes": Array [
            Object {
              "index": 1,
              "isTransitioning": false,
              "key": "Encoding",
              "routeName": "Encoding",
              "routes": Array [
                Object {
                  "key": "id-1565732047195-0",
                  "routeName": "Main",
                },
                Object {
                  "key": "id-1565732047195-2",
                  "params": Object {
                    "uri": "file:/data/user/0/com.stegappasaurus/cache/ImagePicker/a89493b5-e2a5-4546-80f3-4fb13d2461d8.png",
                  },
                  "routeName": "Message",
                },
              ],
            },
            Object {
              "index": 0,
              "isTransitioning": false,
              "key": "Decoding",
              "routeName": "Decoding",
              "routes": Array [
                Object {
                  "key": "id-1565732047195-1",
                  "routeName": "Main",
                },
              ],
            },
          ],
        },
        "toggleDrawer": [MockFunction],
      }
    }
    primary="#E88C0C"
    theme={
      Object {
        "background": "#FFF",
        "color": "#17212D",
        "isDark": false,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginRight": 2,
        "marginTop": 2,
      }
    }
  >
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
      style={
        Object {
          "backgroundColor": "#E88C0C",
          "flex": 1,
          "height": 250,
          "justifyContent": "center",
          "marginLeft": 2,
          "marginTop": 2,
        }
      }
    >
      <Themed.Icon
        iconStyle={
          Object {
            "color": "#FFF",
            "fontSize": 40,
            "textAlign": "center",
          }
        }
        name="photo"
        type="font-awesome"
      />
    </TouchableOpacity>
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "marginRight": 2,
      }
    }
  >
    <PhotoAlbumList
      onPhotoPress={[Function]}
    />
  </View>
</View>
`;

exports[`Decoding Main: Match Snapshots 2 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "backgroundColor": "#17212D",
      },
    ]
  }
>
  <MainHeader
    navigation={
      Object {
        "addListener": [MockFunction],
        "closeDrawer": [MockFunction],
        "dangerouslyGetParent": [MockFunction],
        "dismiss": [MockFunction],
        "dispatch": [MockFunction],
        "emit": [MockFunction],
        "getParam": [MockFunction],
        "goBack": [MockFunction],
        "isFirstRouteInParent": [MockFunction],
        "isFocused": [MockFunction],
        "navigate": [MockFunction],
        "openDrawer": [MockFunction],
        "setParams": [MockFunction],
        "state": Object {
          "index": 0,
          "isTransitioning": false,
          "key": "Home",
          "routeName": "Home",
          "routes": Array [
            Object {
              "index": 1,
              "isTransitioning": false,
              "key": "Encoding",
              "routeName": "Encoding",
              "routes": Array [
                Object {
                  "key": "id-1565732047195-0",
                  "routeName": "Main",
                },
                Object {
                  "key": "id-1565732047195-2",
                  "params": Object {
                    "uri": "file:/data/user/0/com.stegappasaurus/cache/ImagePicker/a89493b5-e2a5-4546-80f3-4fb13d2461d8.png",
                  },
                  "routeName": "Message",
                },
              ],
            },
            Object {
              "index": 0,
              "isTransitioning": false,
              "key": "Decoding",
              "routeName": "Decoding",
              "routes": Array [
                Object {
                  "key": "id-1565732047195-1",
                  "routeName": "Main",
                },
              ],
            },
          ],
        },
        "toggleDrawer": [MockFunction],
      }
    }
    primary="#E88C0C"
    theme={
      Object {
        "background": "#17212D",
        "color": "#FFF",
        "isDark": false,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginRight": 2,
        "marginTop": 2,
      }
    }
  >
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
      style={
        Object {
          "backgroundColor": "#E88C0C",
          "flex": 1,
          "height": 250,
          "justifyContent": "center",
          "marginLeft": 2,
          "marginTop": 2,
        }
      }
    >
      <Themed.Icon
        iconStyle={
          Object {
            "color": "#FFF",
            "fontSize": 40,
            "textAlign": "center",
          }
        }
        name="photo"
        type="font-awesome"
      />
    </TouchableOpacity>
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "marginRight": 2,
      }
    }
  >
    <PhotoAlbumList
      onPhotoPress={[Function]}
    />
  </View>
</View>
`;
